---
title: "Datos EcoBici"
format: html
editor: visual
---

## Análisis de datos Programa ECOBICI

### Idea:

Este proyecto intenta abordar un análisis completo del programa [ECOBICI](https://data.buenosaires.gob.ar/dataset/bicicletas-publicas) a través de 3 fuentes de datos:

Usuarios

Estaciones

Recorridos


### recursos

https://github.com/datosgcba/taller-api-transporte/blob/master/Estaciones_bicicletas_publicas.Rmd
https://rpubs.com/andresvecchio/Viajes_Urbanos
https://rpubs.com/andresvecchio/608604

### Visualizaciones ###########################

Sectores: estaciones por comuna 

Sectores: estaciones por barrio

geom_line: Evolutivo mensual de recorridos por género

geom_line: Evolutivo mensual de recorridos por temp max y min

geom_boxplot: duración de recorrido por género/ edad (?)

geom_histogram: Distribución de usuarios según cantidad de recorridos efectuados

Mapa leaflet: estaciones con popup de anclajes, nombre y cant de recorridos 2023 (?)

Density map: cant de estaciones

Density map: Estaciones por cantidad de recorridos (JOIN ESTACIONES RECORRIDOS)

Density map: puntos de orígen (?)

ggmap: puntos con origen y destino de un dia en hábil (puede ser animado mañana - tarde - noche) VER HORAS PICOS

ggmap: puntos con origen y destino de un dia no hábil (puede ser animado mañana - tarde - noche)

ggmap: puntos con origen y destino de un dia hábil por género (?)


## Pendientes

RUTEO SUBTES CIUDAD 15 MIN ( VER https://martoalalu.github.io/about/)

API CLIMA (HECHO MEDIANTE SCRAPING VER https://github.com/GuilleFerchero/Scrap_smn)

VER SI EL HTML RENDERIZA BIEN COMO PARA ENTREGARLO

VER COMO MANEJAR EL TEMA DE RECORRIDOS POR EL VOLUMEN DE LA INFO






## Instalamos librerias

```{r librerias, warning=FALSE}

rm(list = ls()) 

###################################################################################
# Instalamos librerías de trabajo
if (!require("pacman")) install.packages("pacman")
pacman::p_load("DT", 
               "lubridate",
               "tidyverse",
               "leaflet",
               "sf",
               "scales",
               "ggmap",
               "osmdata",
               "showtext",
               "ggtext")

#recurso :https://stackoverflow.com/questions/4090169/elegant-way-to-check-for-missing-packages-and-install-them

###################################################################################


```

## Descargamos bases de trabajo

```{r descargas, warning=FALSE}

#leemos archivo de trabajo (USUARIOS)

#linkusu <- "https://cdn.buenosaires.gob.ar/datosabiertos/datasets/transporte-y-obras-publicas/bicicletas-publicas/usuarios_ecobici_2023.csv"

datausu <- read.csv("data/usuarios_ecobici_2023.csv", encoding = "UTF-8")


#limpieza

datausu <- datausu %>%
  mutate("Genero" = case_when( genero_usuario == "MALE" ~ "Masculino",
                               genero_usuario == "FEMALE" ~ "Femenino",
                               TRUE ~ "Otro"),
         "Fecha" = ymd(fecha_alta),
         "Mes" = month(Fecha, label = TRUE),
         "Día" = wday(Fecha,label = TRUE, abbr = FALSE),
         "Hora" = hms(hora_alta),
         "Edad" = as.numeric(as.character(edad_usuario)),
         "Año" = year(fecha_alta),
         "EdadRec" = case_when(Edad >= 0 & Edad < 15 ~ "Menores de 15",
                               Edad >= 15 & Edad < 20 ~ "de 15 hasta 20",
                            Edad >= 20 & Edad < 25 ~ "de 20 hasta 25",
                            Edad >= 25 & Edad < 30 ~ "de 25 hasta 30",
                            Edad >= 30 & Edad < 35 ~ "de 30 hasta 35",
                            Edad >= 35 & Edad < 40 ~ "de 35 hasta 40",
                            Edad >= 40 & Edad < 45 ~ "de 40 hasta 45",
                            Edad >= 45 & Edad < 50 ~ "de 45 hasta 50",
                            Edad >= 50 & Edad < 55 ~ "de 50 hasta 55",
                            TRUE ~ "Mayores de 55"))

# Tabla1 <- datausu %>%
#   group_by(Genero) %>%
#   summarise(Total = n()) %>%
#   mutate("%" = round(Total/sum(Total)*100,2))



###################################################################################


```

```{r descargas, warning=FALSE}

# leemos archivo de trabajo (RECORRIDOS)

link<- ("data/recorridos-realizados-2023.zip")

temp <- tempfile(link)
data <- read.csv(unz(link, "trips_2023.csv"), encoding = "UTF-8")
unlink(temp)

# limpieza data

data1 <- data %>%
  head(20)

# data %>%
#   str()

# limpieza duración recorrido

data$duracion_recorrido <- sub(",", "", data$duracion_recorrido, fixed = TRUE)

datareco <- data %>%
  mutate("Duración_recorrido" = as.numeric(as.character(data$duracion_recorrido)),
         "Fecha_origen" = ymd_hms(data$fecha_origen_recorrido),
         "Fecha_destino" = ymd_hms(data$fecha_destino_recorrido),
         "Duración_real" = Fecha_destino - Fecha_origen,
         "Mes_origen" = month(Fecha_origen, label = TRUE),
         "Día_origen" = wday(Fecha_origen, label = TRUE, abbr = FALSE))

#Extraer la actividad de un dia:

fechalim1 <- as.Date("2023-04-01")
fechalim2 <- as.Date("2023-04-02")

dataday <- datareco %>% 
  filter(Fecha_origen  > fechalim1 & Fecha_origen  < fechalim2)



```

```{r descargas, warning=FALSE}

##(PRUEBA DESCARGA ESTACIONES)
linkest <- "https://cdn.buenosaires.gob.ar/datosabiertos/datasets/transporte-y-obras-publicas/estaciones-bicicletas-publicas/nuevas-estaciones-bicicletas-publicas.geojson"

dataest <- st_read(linkest)

##(DESCARGA MAPA BARRIOS CABA)

#barrios <- st_read('https://bitsandbricks.github.io/data/CABA_barrios.geojson')


estaciones <- dataest %>% 
  mutate("Región" = case_when(COMUNA %in% c("COMUNA 12","COMUNA 13","COMUNA 14","COMUNA 2") ~ "Norte",
                              COMUNA %in% c("COMUNA 5","COMUNA 6","COMUNA 7","COMUNA 10","COMUNA 11","COMUNA 15","COMUNA 1","COMUNA 3") ~ "Centro",
                              COMUNA %in% c("COMUNA 8","COMUNA 4","COMUNA 9") ~ "Sur",
                              COMUNA == "" ~ "Sin Informar"))

# tabla_1 <- estaciones %>% 
#   select(COMUNA) %>% 
#   group_by(COMUNA) %>% 
#   summarize(Total = n())
  
  
```

## Mapa interactivo con estaciones

```{r}

m <- leaflet() %>%
  addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
  #setView(lng = -58.5318469, lat = -34.6265903, zoom = 10) %>% 
  addMarkers(data = estaciones , lat = ~Lat, lng = ~Lon, popup = ~ paste0("Estación: ", NOMBRE, " Anclajes: ", ANCLAJES),clusterOptions = markerClusterOptions())
  
m  # Imprime el mapa


```

## Mapa interactivo con recorridos

```{r}

r <- leaflet() %>%
  addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
  #setView(lng = -58.5318469, lat = -34.6265903, zoom = 10) %>% 
  addMarkers(data = dataday , lat = ~lat_estacion_origen, lng = ~long_estacion_origen, popup = ~ paste0("Fecha Origen: ", fecha_origen_recorrido, " Duración: ", duracion_recorrido),clusterOptions = markerClusterOptions())
  
r  # Imprime el mapa


```
